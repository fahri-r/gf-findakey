#BlueJ class context
comment0.target=Mover
comment1.params=
comment1.target=void\ moveRight()
comment1.text=\r\n\ Try\ to\ make\ the\ {@code\ Mover}\ move\ right,\ at\ a\ speed\ specified\ by\ {@link\ \#setMovementSpeed(int)}\r\n\ \r\n\ @see\ moveLeft()\r\n
comment10.params=
comment10.target=boolean\ atBottom()
comment10.text=\r\n\ Returns\ a\ value\ indicating\ if\ the\ {@code\ Mover}\ is\ at\ the\ bottom\ of\ the\ world.\r\n
comment11.params=newSpeed
comment11.target=void\ setMovementSpeed(int)
comment11.text=\r\n\ Sets\ the\ speed\ at\ which\ this\ {@code\ Mover}\ moves.\r\n\ \r\n\ @see\ moveLeft()\r\n\ @see\ moveRight()\r\n
comment12.params=c
comment12.target=void\ setBlockingClasses(java.lang.Class[])
comment12.text=\r\n\ Sets\ the\ classes\ this\ {@code\ Mover}\ can\ not\ intersect.\r\n\ \r\n\ @see\ canMoveLeft()\r\n\ @see\ canMoveRight()\r\n\ @see\ canJump()\r\n\ @see\ onGround()\r\n
comment13.params=g
comment13.target=void\ setGravity(int)
comment13.text=\r\n\ Sets\ the\ gravity\ for\ this\ {@code\ Mover}\r\n\ \r\n\ @see\ doGravity()\r\n\ @see\ jump()\r\n
comment14.params=v
comment14.target=void\ setVSpeed(int)
comment14.text=\r\n\ Deprecated.\ Originally\ ment\ at\ end\ of\ act\ method,\ no\ replacement\ needed\r\n\ \r\n\ @deprecated\ 2.1.0\r\n
comment2.params=
comment2.target=void\ moveLeft()
comment2.text=\r\n\ Try\ to\ make\ the\ {@code\ Mover}\ move\ left,\ at\ a\ speed\ specified\ by\ {@link\ \#setMovementSpeed(int)}\r\n\ \r\n\ @see\ moveRight()\r\n
comment3.params=
comment3.target=boolean\ onGround()
comment3.text=\r\n\ Detects\ if\ this\ {@code\ Mover}\ is\ just\ above\ a\ block\ that\ has\ been\ set\ as\ a\ barrier\ by\ {@link\ \#setBlockingClasses(Class[])}\r\n
comment4.params=
comment4.target=boolean\ canMoveSideways()
comment4.text=\r\n\ Detects\ if\ this\ {@code\ Mover}\ can\ move\ both\ left\ and\ right\r\n\ \r\n\ @see\ canMoveLeft()\r\n\ @see\ canMoveRight()\r\n
comment5.params=
comment5.target=boolean\ canMoveLeft()
comment5.text=\r\n\ Detects\ if\ this\ {@code\ Mover}\ can\ move\ left,\ not\ being\ blocked\ by\ any\ classes\ set\ as\r\n\ barriers\ by\ {@link\ \#setBlockingClasses(Class[])}\r\n\ \r\n\ @see\ canMoveSideways()\r\n\ @see\ canMoveRight()\r\n
comment6.params=
comment6.target=boolean\ canMoveRight()
comment6.text=\r\n\ Detects\ if\ this\ {@code\ Mover}\ can\ move\ right,\ not\ being\ blocked\ by\ any\ classes\ set\ as\r\n\ barriers\ by\ {@link\ \#setBlockingClasses(Class[])}\r\n\ \r\n\ @see\ canMoveSideways()\r\n\ @see\ canMoveLeft()\r\n
comment7.params=
comment7.target=boolean\ canJump()
comment7.text=\r\n\ Detects\ if\ this\ {@code\ Mover}\ can\ jump,\ not\ being\ blocked\ by\ any\ classes\ set\ as\r\n\ barriers\ by\ {@link\ \#setBlockingClasses(Class[])}\r\n\ \r\n\ @see\ canMoveLeft()\r\n\ @see\ canMoveRight()\r\n\ @see\ jump(int)\r\n
comment8.params=speed
comment8.target=void\ jump(int)
comment8.text=\r\n\ Tries\ to\ jump,\ succedes\ if\ not\ blocked\ by\ classes\ set\ as\ barriers\ by\ {@link\ setBlockingClasses(Class[])}\r\n\ \r\n\ @see\ canJump()\r\n
comment9.params=
comment9.target=void\ doGravity()
comment9.text=\r\n\ Makes\ the\ {@code\ Mover}\ fall\ if\ not\ supported\ by\ a\ class\ set\ as\ a\ barrier\ by\ {@link\ setBlockingClasses(Class[])}.\r\n\ Falling\ will\ accelerate,\ depending\ on\ the\ set\ gravity,\ as\ the\ {@code\ Mover}\ falls\ farther.\ Should\ normally\ be\ called\ in\ the\ {@code\ act()}\ \r\n\ method\ every\ time.\r\n\ \r\n\ @see\ setGravity(int)\r\n\ @see\ jump(int)\r\n
numComments=15
